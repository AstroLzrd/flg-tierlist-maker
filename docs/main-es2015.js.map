{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/classes/tier-character.ts","./src/app/classes/tier.ts","./src/app/list-container/dialog/dialog-add-character/character-dialog-content.ts","./src/app/list-container/dialog/dialog-add-character/dialog-add-character.component.ts","./src/app/list-container/dialog/dialog-add-character/dialog-add-character.component.html","./src/app/list-container/dialog/dialog-color/dialog-color.component.ts","./src/app/list-container/dialog/dialog-color/dialog-color.component.html","./src/app/list-container/dialog/dialog-tiername/dialog-tiername.component.ts","./src/app/list-container/dialog/dialog-tiername/dialog-tiername.component.html","./src/app/list-container/dialog/dialog-tiername/tier-dialog-content.ts","./src/app/list-container/list-container.component.ts","./src/app/list-container/list-container.component.html","./src/app/list-container/list-item/list-item.component.ts","./src/app/toolbar/toolbar.component.ts","./src/app/toolbar/toolbar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'flg-tiermaker';\n}\n","<div>\n  <app-toolbar></app-toolbar>\n  <div id=\"page-content\">\n    <app-list-container></app-list-container>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//Angular Material Components\nimport { DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { ListContainerComponent } from './list-container/list-container.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { ListItemComponent } from './list-container/list-item/list-item.component';\nimport { DialogColorComponent } from './list-container/dialog/dialog-color/dialog-color.component';\nimport { DialogTiernameComponent } from './list-container/dialog/dialog-tiername/dialog-tiername.component';\nimport { DialogAddCharacterComponent } from './list-container/dialog/dialog-add-character/dialog-add-character.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListContainerComponent,\n    ToolbarComponent,\n    ListItemComponent,\n    DialogColorComponent,\n    DialogTiernameComponent,\n    DialogAddCharacterComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DragDropModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class TierCharacter {\n    name: String;\n    profilePicURL: String;\n\n    constructor(name: string, profilePicURL: string) { \n        this.name = name;\n        this.profilePicURL = profilePicURL;\n    }\n}\n","import { TierCharacter } from \"./tier-character\";\n\nexport class Tier {\n    characters: TierCharacter[] = [];\n    name = \"Unnamed Tier\"\n    colorHex = \"#8F8\"\n\n    constructor(name: string, colorHex: string) { \n        this.name = name;\n        this.colorHex = colorHex;\n    }\n}\n","export class CharacterDialogContent {\n    name:String;\n    profilePicURL:String;\n    \n    constructor(){\n        //this.name =\"\";\n        this.profilePicURL = \"\";\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { CharacterDialogContent } from './character-dialog-content';\n\n@Component({\n  selector: 'app-dialog-add-character',\n  templateUrl: './dialog-add-character.component.html',\n  styleUrls: ['./dialog-add-character.component.css']\n})\nexport class DialogAddCharacterComponent implements OnInit {\n\n  characterData: CharacterDialogContent;\n\n  constructor(public dialogRef: MatDialogRef<DialogAddCharacterComponent>) { }\n\n  ngOnInit(): void {\n    this.characterData = new CharacterDialogContent();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  pfpInputChange(event) { // called each time file input changes\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n      reader.onload = (event) => { // called once readAsDataURL is completed\n        this.characterData.profilePicURL = event.target.result.toString();\n      }\n    }\n}\n\n}\n","<h1 mat-dialog-title>Add a character</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\">\n        <mat-label>Name</mat-label>\n        <input matInput [(ngModel)]=\"characterData.name\" cdkFocusInitial>\n  </mat-form-field>\n        <input #pfpInput hidden=\"true\" type=\"file\" onclick=\"this.value=null\" (change)=\"pfpInputChange($event)\" accept=\".png\"/>\n        <button mat-flat-button (click)=\"pfpInput.click()\">Select Profile Picture</button>\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-flat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-flat-button [mat-dialog-close]=\"characterData\" [disabled]=\"characterData.name == undefined || characterData.name.length < 2 || characterData.profilePicURL == undefined || characterData.profilePicURL.length < 1\" color=\"primary\" >Ok</button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-color',\n  templateUrl: './dialog-color.component.html',\n  styleUrls: ['./dialog-color.component.css']\n})\nexport class DialogColorComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DialogColorComponent>, @Inject(MAT_DIALOG_DATA) public colorHex: string) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(this.colorHex);\n  }\n}\n","<h1 mat-dialog-title>Select a color</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\">\n    <mat-radio-group aria-label=\"Select an option\">\n        <mat-radio-button value=\"1\">Option 1</mat-radio-button>\n        <mat-radio-button value=\"2\">Option 2</mat-radio-button>\n      </mat-radio-group>      \n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"colorHex\" cdkFocusInitial>Ok</button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TierDialogContent } from './tier-dialog-content';\n\n@Component({\n  selector: 'app-dialog-tiername',\n  templateUrl: './dialog-tiername.component.html',\n  styleUrls: ['./dialog-tiername.component.css']\n})\nexport class DialogTiernameComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DialogTiernameComponent>, @Inject(MAT_DIALOG_DATA) public data: TierDialogContent) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Tier Settings</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Name</mat-label>\n    <input matInput [(ngModel)]=\"data.name\" cdkFocusInitial>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Colour</mat-label>\n    <input matInput type=\"color\" [(ngModel)]=\"data.color\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"data\"  color=\"primary\" >Ok</button>\n</div>\n","export class TierDialogContent {\n    color: String;\n    name: String;\n\n    constructor(){\n        this.color =\"\";\n        this.name = \"\";\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Tier } from '../classes/tier';\r\nimport defaultCharacters from '../../assets/characters.json';\r\nimport {DialogColorComponent} from './dialog/dialog-color/dialog-color.component'\r\nimport {DialogTiernameComponent} from './dialog/dialog-tiername/dialog-tiername.component'\r\nimport html2canvas from 'html2canvas';\r\nimport { TierCharacter } from '../classes/tier-character';\r\nimport { DialogAddCharacterComponent } from './dialog/dialog-add-character/dialog-add-character.component';\r\n\r\n@Component({\r\n  selector: 'app-list-container',\r\n  templateUrl: './list-container.component.html',\r\n  styleUrls: ['./list-container.component.css']\r\n})\r\nexport class ListContainerComponent implements OnInit {\r\n\r\n  @ViewChild('tierlist') screen: ElementRef;\r\n  @ViewChild('canvas') canvas: ElementRef;\r\n  @ViewChild('downloadLink') downloadLink: ElementRef;\r\n  gridBreakpoint = 1\r\n  tiers: Tier[];\r\n  unsortedCharacters: TierCharacter[];\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.setGridBreakPoint(window.innerWidth);\r\n    this.initializeData();\r\n  }\r\n\r\n  onResize(event) {\r\n    this.setGridBreakPoint(event.target.innerWidth);\r\n  }\r\n\r\n  initializeData(){\r\n    this.tiers = [\r\n      new Tier(\"S tier\", \"#7fffff\"),\r\n      new Tier(\"A tier\", \"#7fff7f\"),\r\n      new Tier(\"B tier\", \"#bfff7f\"),\r\n      new Tier(\"C tier\", \"#ffff7f\"),\r\n      new Tier(\"D tier\", \"#ffbf7f\"),\r\n      new Tier(\"F tier\", \"#ff7f7f\")\r\n    ]\r\n    this.unsortedCharacters = [];\r\n    for(let characterName of defaultCharacters){\r\n      this.unsortedCharacters.push(new TierCharacter(characterName,\"assets/avatars/\"+characterName+\".png\"))\r\n    }\r\n  }\r\n\r\n  setGridBreakPoint(windowSize){\r\n    //This is ugly as fuck, but apparently gives us the fastest performance in every browser except Internet Explorer, but they can go fuck themselves. You're on 4chan, you don't use that\r\n    //TODO give the unsorted bin a different breakpoint\r\n    if(windowSize <= 1000) this.gridBreakpoint = 3; else\r\n    if(windowSize <= 1500) this.gridBreakpoint = 9;\r\n    else this.gridBreakpoint = 6;\r\n\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n      event.container.data.sort();\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n                        event.container.data,\r\n                        event.previousIndex,\r\n                        event.currentIndex);\r\n      event.container.data.sort();\r\n    }\r\n  }\r\n\r\n  clickResetButton(){\r\n    this.initializeData();\r\n  }\r\n\r\n  downloadImage(){\r\n    html2canvas(this.screen.nativeElement,{logging: true, useCORS: true, allowTaint: false}).then(canvas => {\r\n      this.canvas.nativeElement.src = canvas.toDataURL();\r\n      this.downloadLink.nativeElement.href = canvas.toDataURL('image/png');\r\n      this.downloadLink.nativeElement.download = 'flg-tierlist-'+Date.now()+\".png\";\r\n      this.downloadLink.nativeElement.click();\r\n    });\r\n  }\r\n\r\n  clickAddTier(){\r\n    const dialogRef = this.dialog.open(DialogTiernameComponent, {\r\n      width: '250px',\r\n      data: {name: \"X Tier\",\r\n            color: \"#ffff7f\"}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != undefined){\r\n        this.tiers[this.tiers.length] = new Tier(result.name, result.color)\r\n      }\r\n    });   \r\n  }\r\n\r\n  clickAddCharacter(){\r\n    const dialogRef = this.dialog.open(DialogAddCharacterComponent, {\r\n      width: '650px',\r\n      //data: {name: \"X Tier\",\r\n      //      color: \"#ffff7f\"}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != undefined){\r\n        console.debug(result)\r\n        this.unsortedCharacters[this.unsortedCharacters.length] = new TierCharacter(result.name,result.profilePicURL);\r\n        //this.tiers[this.tiers.length] = new Tier(result.name, result.color)\r\n      }\r\n      else{\r\n        console.debug(\"Dialog yielded no result.\")\r\n      }\r\n    });   \r\n    /*\r\n    var characterName = prompt(\"Character name?\", '')\r\n    if (characterName != null || characterName.length > 2){\r\n      this.addCharacter(characterName);\r\n    }\r\n    else{\r\n      alert(\"Invalid character name.\");\r\n    }\r\n    */\r\n  }\r\n\r\n  clickMoveTierUpButton(tier: Tier){\r\n    this.moveTier(tier,true);\r\n  }\r\n\r\n  clickMoveTierDownButton(tier: Tier){\r\n    this.moveTier(tier,false);\r\n  }\r\n\r\n\r\n  clickChangeTierButton(tier: Tier){\r\n    const dialogRef = this.dialog.open(DialogTiernameComponent, {\r\n      width: '250px',\r\n      data: {name: tier.name,\r\n            color: tier.colorHex}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != undefined){\r\n        tier.name = result.name;\r\n        tier.colorHex = result.color;\r\n      }\r\n    });   \r\n  }\r\n\r\n  clickDeleteTierButton(tier: Tier){\r\n    this.tiers.splice(this.tiers.indexOf(tier),1);\r\n    for(let character of tier.characters){\r\n      this.unsortedCharacters.push(character);\r\n    }\r\n    this.unsortedCharacters.sort();\r\n  }\r\n\r\n  moveTier(tier: Tier, upwards: boolean){\r\n    //by \"upwards\" we mean the position, not the number\r\n    let index: number = this.tiers.indexOf(tier);\r\n    //this *should* not happen, but since indexOf does have a return for bad data, we'll catch it anyway\r\n    if(index < 0) {\r\n      console.error(\"Tier: \"+tier+\" isn't actually in the list!\");\r\n      return;\r\n    }\r\n    //check to see if we're not trying to move to an invalid position\r\n    if((upwards&&index < 1)||(!upwards&&index == this.tiers.length-1)) return;\r\n    //but we're all clear now, let's move our thing\r\n    let newIndex = upwards ? index - 1 : index + 1\r\n    let oldTier = this.tiers[newIndex];\r\n    this.tiers[newIndex] = tier;\r\n    this.tiers[index] = oldTier;\r\n  }\r\n\r\n}\r\n","<div>\r\n\r\n    <button mat-flat-button \r\n    matTooltip=\"Add Tier\" \r\n    color=\"accent\"\r\n    (click)=\"clickAddTier()\">\r\n        <mat-icon>add</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Reset Everything\" \r\n    (click)=\"clickResetButton()\"\r\n    color=\"warn\">\r\n        <mat-icon> layers_clear</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Save\" \r\n    disabled>\r\n        <mat-icon> save</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Load\" \r\n    disabled>\r\n        <mat-icon> folder_open</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Export to image\" \r\n    (click)=\"downloadImage()\">\r\n        <mat-icon>image</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Caleb Button\" \r\n    disabled>\r\n        <mat-icon>cloud</mat-icon>\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <div cdkDropListGroup>\r\n        <div #tierlist class=\"list-container-column\">\r\n        <div class=\"tier-container\" *ngFor=\"let tier of tiers\">\r\n            <div class=\"tier-column tier-column-name\" [style.background-color]=\"tier.colorHex\">\r\n                <h2 title>{{tier.name}}</h2>                \r\n            </div>\r\n            <div class=\"tier-column tier-column-tier\">\r\n                <mat-grid-list\r\n                    [cols]=\"gridBreakpoint\"\r\n                    cdkDropList\r\n                    rowHeight=\"2:1\"\r\n                    [cdkDropListData]=\"tier.characters\"\r\n                    class=\"tier-list\"\r\n                    (cdkDropListDropped)=\"drop($event)\">\r\n                        <mat-grid-tile *ngFor=\"let character of tier.characters\"  cdkDrag>\r\n                            <div class=\"tier-item\">\r\n                                <!--<img src=\"https://static.f-list.net/images/avatar/{{character.toLowerCase()}}.png\"-->\r\n                                <img src=\"{{character.profilePicURL}}\"\r\n                                class=\"tier-card-image\" \r\n                                matTooltip=\"{{character.name}}\"\r\n                                matTooltipPosition=\"above\" />\r\n                            </div>\r\n                        </mat-grid-tile>\r\n                </mat-grid-list>\r\n                <button mat-button \r\n                matTooltip=\"Edit tier\" \r\n                (click)=\"clickChangeTierButton(tier)\">\r\n                    <mat-icon>build</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Delete\" \r\n                (click)=\"clickDeleteTierButton(tier)\"\r\n                color=\"warn\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Move up\" \r\n                (click)=\"clickMoveTierUpButton(tier)\">\r\n                    <mat-icon>expand_less</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Move down\" \r\n                (click)=\"clickMoveTierDownButton(tier)\">\r\n                <mat-icon>expand_more</mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        <div class=\"list-container-column\">\r\n            <mat-expansion-panel  id=\"unsorted-character-container\"\r\n            [expanded]=\"true\" >\r\n                    <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        Unsorted Characters\r\n                    </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <mat-grid-list\r\n                    [cols]=\"gridBreakpoint\"\r\n                    (window:resize)=\"onResize($event)\"\r\n                    rowHeight=\"2:1\"\r\n                    cdkDropList\r\n                    [cdkDropListData]=\"unsortedCharacters\"\r\n                    class=\"example-list\"\r\n                    (cdkDropListDropped)=\"drop($event)\">\r\n                        <mat-grid-tile *ngFor=\"let character of unsortedCharacters\"  cdkDrag>\r\n                            <div class=\"tier-item\">\r\n                                <img src=\"{{character.profilePicURL}}\"\r\n                                class=\"tier-card-image\" \r\n                                matTooltip=\"{{character.name}}\"\r\n                                matTooltipPosition=\"above\" />\r\n                                <a mat-icon-button href=\"https://www.f-list.net/c/{{character.name}}\" target=\"_blank\">\r\n                                    <mat-icon>open_in_new</mat-icon>\r\n                                </a>\r\n                            </div>\r\n                        </mat-grid-tile>\r\n                    </mat-grid-list>\r\n                    <button mat-flat-button matTooltip=\"Add Character\" (click)=\"clickAddCharacter()\" color=\"accent\">\r\n                        <mat-icon>add</mat-icon>\r\n                    </button>\r\n                </mat-expansion-panel>\r\n            </div>\r\n      </div>\r\n<!--For the html2canvas methods-->\r\n<div id=\"download\">\r\n    <img #canvas>\r\n    <a #downloadLink></a>\r\n  </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css']\n})\nexport class ListItemComponent implements OnInit {\n\n  @Input() character: string;\n  @Input() hideLink: boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n      <span>/flg/ Tiermaker</span>\n      <span class=\"toolbar-spacer\"></span>\n      <a mat-icon-button\n      matTooltip=\"Send note on F-list\"\n      href=\"https://www.f-list.net/read_notes.php?send=fatcat%20client\"\n      target=\"_blank\">\n        <mat-icon>mail</mat-icon>\n      </a>\n      <a mat-icon-button\n      matTooltip=\"Github\"\n      href=\"https://github.com/FatCatClient/flg-tierlist-maker/\"\n      target=\"_blank\">\n        <mat-icon>open_in_new</mat-icon>\n    </a>\n</mat-toolbar>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}