{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/classes/tier.ts","webpack:///src/app/list-container/dialog/dialog-color/dialog-color.component.ts","webpack:///src/app/list-container/dialog/dialog-color/dialog-color.component.html","webpack:///src/app/list-container/dialog/dialog-tiername/dialog-tiername.component.ts","webpack:///src/app/list-container/dialog/dialog-tiername/dialog-tiername.component.html","webpack:///src/app/list-container/list-container.component.ts","webpack:///src/app/list-container/list-container.component.html","webpack:///src/app/list-container/list-item/list-item.component.ts","webpack:///src/app/toolbar/toolbar.component.ts","webpack:///src/app/toolbar/toolbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","Tier","name","colorHex","characters","DialogColorComponent","dialogRef","close","onNoClick","DialogTiernameComponent","ListContainerComponent","dialog","gridBreakpoint","setGridBreakPoint","window","innerWidth","initializeData","event","target","tiers","unsortedCharacters","Object","assign","windowSize","previousContainer","container","data","previousIndex","currentIndex","sort","screen","nativeElement","logging","useCORS","allowTaint","canvas","src","toDataURL","downloadLink","href","download","Date","now","click","tierName","prompt","length","characterName","addCharacter","alert","tier","moveTier","openColorDialog","openTierNameDialog","splice","indexOf","push","upwards","index","console","error","newIndex","oldTier","currentColor","currentName","clickAddTier","clickResetButton","downloadImage","onResize","drop","clickAddCharacter","ListItemComponent","hideLink","ToolbarComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'flg-tiermaker';\n}\n","<div>\n  <app-toolbar></app-toolbar>\n  <div id=\"page-content\">\n    <app-list-container></app-list-container>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//Angular Material Components\nimport { DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { ListContainerComponent } from './list-container/list-container.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { ListItemComponent } from './list-container/list-item/list-item.component';\nimport { DialogColorComponent } from './list-container/dialog/dialog-color/dialog-color.component';\nimport { DialogTiernameComponent } from './list-container/dialog/dialog-tiername/dialog-tiername.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListContainerComponent,\n    ToolbarComponent,\n    ListItemComponent,\n    DialogColorComponent,\n    DialogTiernameComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DragDropModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Tier {\n    characters = [];\n    name = \"? Tier\"\n    colorHex = \"#8F8\"\n\n    constructor(name: string, colorHex: string) { \n        this.name = name;\n        this.colorHex = colorHex;\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-color',\n  templateUrl: './dialog-color.component.html',\n  styleUrls: ['./dialog-color.component.css']\n})\nexport class DialogColorComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DialogColorComponent>, @Inject(MAT_DIALOG_DATA) public colorHex: string) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>Select a color</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\">\n    <mat-radio-group aria-label=\"Select an option\">\n        <mat-radio-button value=\"1\">Option 1</mat-radio-button>\n        <mat-radio-button value=\"2\">Option 2</mat-radio-button>\n      </mat-radio-group>      \n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"colorHex\" cdkFocusInitial>Ok</button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-tiername',\n  templateUrl: './dialog-tiername.component.html',\n  styleUrls: ['./dialog-tiername.component.css']\n})\nexport class DialogTiernameComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DialogTiernameComponent>, @Inject(MAT_DIALOG_DATA) public name: string) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Select a new name</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Name</mat-label>\n    <input matInput (ngModel)=\"name\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"name\" cdkFocusInitial>Ok</button>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Tier } from '../classes/tier';\r\nimport defaultCharacters from '../../assets/characters.json';\r\nimport {DialogColorComponent} from './dialog/dialog-color/dialog-color.component'\r\nimport {DialogTiernameComponent} from './dialog/dialog-tiername/dialog-tiername.component'\r\nimport html2canvas from 'html2canvas';\r\n\r\n@Component({\r\n  selector: 'app-list-container',\r\n  templateUrl: './list-container.component.html',\r\n  styleUrls: ['./list-container.component.css']\r\n})\r\nexport class ListContainerComponent implements OnInit {\r\n\r\n  @ViewChild('tierlist') screen: ElementRef;\r\n  @ViewChild('canvas') canvas: ElementRef;\r\n  @ViewChild('downloadLink') downloadLink: ElementRef;\r\n  gridBreakpoint = 1\r\n  tiers: Tier[];\r\n  unsortedCharacters: string[];\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.setGridBreakPoint(window.innerWidth);\r\n    this.initializeData();\r\n  }\r\n\r\n  onResize(event) {\r\n    this.setGridBreakPoint(event.target.innerWidth);\r\n  }\r\n\r\n  initializeData(){\r\n    this.tiers = [\r\n      new Tier(\"S tier\", \"#7fffff\"),\r\n      new Tier(\"A tier\", \"#7fff7f\"),\r\n      new Tier(\"B tier\", \"#bfff7f\"),\r\n      new Tier(\"C tier\", \"#ffff7f\"),\r\n      new Tier(\"D tier\", \"#ffbf7f\"),\r\n      new Tier(\"F tier\", \"#ff7f7f\")\r\n    ]\r\n    this.unsortedCharacters = Object.assign([],defaultCharacters);\r\n    //this.tiers[0].characters = Object.assign([],defaultCharacters);\r\n  }\r\n\r\n  setGridBreakPoint(windowSize){\r\n    //This is ugly as fuck, but apparently gives us the fastest performance in every browser except Internet Explorer, but they can go fuck themselves. You're on 4chan, you don't use that\r\n    //TODO give the unsorted bin a different breakpoint\r\n    if(windowSize <= 1000) this.gridBreakpoint = 3; else\r\n    if(windowSize <= 1500) this.gridBreakpoint = 9;\r\n    else this.gridBreakpoint = 6;\r\n\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n      event.container.data.sort();\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n                        event.container.data,\r\n                        event.previousIndex,\r\n                        event.currentIndex);\r\n      event.container.data.sort();\r\n    }\r\n  }\r\n\r\n  clickResetButton(){\r\n    this.initializeData();\r\n  }\r\n\r\n  downloadImage(){\r\n    html2canvas(this.screen.nativeElement,{logging: true, useCORS: true, allowTaint: false}).then(canvas => {\r\n      this.canvas.nativeElement.src = canvas.toDataURL();\r\n      this.downloadLink.nativeElement.href = canvas.toDataURL('image/png');\r\n      this.downloadLink.nativeElement.download = 'flg-tierlist-'+Date.now()+\".png\";\r\n      this.downloadLink.nativeElement.click();\r\n    });\r\n  }\r\n\r\n  clickAddTier(){\r\n    var tierName = prompt(\"Tier name?\", 'X Tier')\r\n    if (tierName != null){\r\n      this.tiers[this.tiers.length] = new Tier(tierName, \"#FF6\")\r\n    }\r\n  }\r\n\r\n  clickAddCharacter(){\r\n    var characterName = prompt(\"Character name?\", '')\r\n    if (characterName != null || characterName.length > 2){\r\n      this.addCharacter(characterName);\r\n    }\r\n    else{\r\n      alert(\"Invalid character name.\");\r\n    }\r\n  }\r\n\r\n  clickMoveTierUpButton(tier: Tier){\r\n    this.moveTier(tier,true);\r\n  }\r\n\r\n  clickMoveTierDownButton(tier: Tier){\r\n    this.moveTier(tier,false);\r\n  }\r\n\r\n  addCharacter(characterName: string){\r\n    this.unsortedCharacters[this.unsortedCharacters.length] = characterName;\r\n  }\r\n\r\n  clickChangeColorButton(tier: Tier){\r\n\r\n    tier.colorHex = this.openColorDialog(tier.colorHex);\r\n  }\r\n\r\n  clickChangeTierNameButton(tier: Tier){\r\n    tier.name = this.openTierNameDialog(tier.name);\r\n  }\r\n\r\n  clickDeleteTierButton(tier: Tier){\r\n    this.tiers.splice(this.tiers.indexOf(tier),1);\r\n    for(let characterName of tier.characters){\r\n      this.unsortedCharacters.push(characterName);\r\n      this.unsortedCharacters.sort();\r\n    }\r\n  }\r\n\r\n  moveTier(tier: Tier, upwards: boolean){\r\n    //by \"upwards\" we mean the position, not the number\r\n    let index: number = this.tiers.indexOf(tier);\r\n    //this *should* not happen, but since indexOf does have a return for bad data, we'll catch it anyway\r\n    if(index < 0) {\r\n      console.error(\"Tier: \"+tier+\" isn't actually in the list!\");\r\n      return;\r\n    }\r\n    //check to see if we're not trying to move to an invalid position\r\n    if((upwards&&index < 1)||(!upwards&&index == this.tiers.length-1)) return;\r\n    //but we're all clear now, let's move our thing\r\n    let newIndex = upwards ? index - 1 : index + 1\r\n    let oldTier = this.tiers[newIndex];\r\n    this.tiers[newIndex] = tier;\r\n    this.tiers[index] = oldTier;\r\n  }\r\n\r\n  openColorDialog(currentColor: string): string{\r\n    return prompt(\"New color in hex. (this is temporary because the dialog is busted.\",currentColor);\r\n    /*\r\n    TODO: figure out how to properly pass data to these dialog things\r\n    var newColor = currentColor;\r\n    const dialogRef = this.dialog.open(DialogColorComponent, {\r\n      width: '250px',\r\n      data: {color: newColor}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      newColor = result;\r\n    });\r\n    return newColor;\r\n    */\r\n  }\r\n\r\n  openTierNameDialog(currentName: string): string{\r\n    return prompt(\"New name?\",currentName);\r\n    /*\r\n    var newName = currentName;\r\n    const dialogRef = this.dialog.open(DialogTiernameComponent, {\r\n      width: '250px',\r\n      data: {newName}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      newName = result;\r\n      console.debug('The dialog was closed: '+newName);\r\n    });\r\n    return newName;\r\n    */\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div>\r\n\r\n    <button mat-flat-button \r\n    matTooltip=\"Add Tier\" \r\n    color=\"accent\"\r\n    (click)=\"clickAddTier()\">\r\n        <mat-icon>add</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Reset Everything\" \r\n    (click)=\"clickResetButton()\"\r\n    color=\"warn\">\r\n        <mat-icon> layers_clear</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Save\" \r\n    disabled>\r\n        <mat-icon> save</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Load\" \r\n    disabled>\r\n        <mat-icon> folder_open</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Export to image\" \r\n    (click)=\"downloadImage()\">\r\n        <mat-icon>image</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Caleb Button\" \r\n    disabled>\r\n        <mat-icon>cloud</mat-icon>\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <div cdkDropListGroup>\r\n        <div #tierlist class=\"list-container-column\">\r\n        <div class=\"tier-container\" *ngFor=\"let tier of tiers\">\r\n            <div class=\"tier-column tier-column-name\" [style.background-color]=\"tier.colorHex\">\r\n                <h2 title>{{tier.name}}</h2>                \r\n            </div>\r\n            <div class=\"tier-column tier-column-tier\">\r\n                <mat-grid-list\r\n                    [cols]=\"gridBreakpoint\"\r\n                    cdkDropList\r\n                    rowHeight=\"2:1\"\r\n                    [cdkDropListData]=\"tier.characters\"\r\n                    class=\"tier-list\"\r\n                    (cdkDropListDropped)=\"drop($event)\">\r\n                        <mat-grid-tile *ngFor=\"let character of tier.characters\"  cdkDrag>\r\n                            <div class=\"tier-item\">\r\n                                <!--<img src=\"https://static.f-list.net/images/avatar/{{character.toLowerCase()}}.png\"-->\r\n                                <img src=\"https://static.f-list.net/images/avatar/{{character.toLowerCase()}}.png\"\r\n                                class=\"tier-card-image\" \r\n                                matTooltip=\"{{character}}\"\r\n                                matTooltipPosition=\"above\" />\r\n                            </div>\r\n                        </mat-grid-tile>\r\n                </mat-grid-list>\r\n                <button mat-button \r\n                matTooltip=\"Rename\" \r\n                (click)=\"clickChangeTierNameButton(tier)\">\r\n                    <mat-icon>title</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Change color\" \r\n                (click)=\"clickChangeColorButton(tier)\">\r\n                    <mat-icon>color_lens</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Delete\" \r\n                (click)=\"clickDeleteTierButton(tier)\"\r\n                color=\"warn\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Move up\" \r\n                (click)=\"clickMoveTierUpButton(tier)\">\r\n                    <mat-icon>expand_less</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Move down\" \r\n                (click)=\"clickMoveTierDownButton(tier)\">\r\n                <mat-icon>expand_more</mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        <div class=\"list-container-column\">\r\n            <mat-expansion-panel  id=\"unsorted-character-container\"\r\n            [expanded]=\"true\" >\r\n                    <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        Unsorted Characters\r\n                    </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <mat-grid-list\r\n                    [cols]=\"gridBreakpoint\"\r\n                    (window:resize)=\"onResize($event)\"\r\n                    rowHeight=\"2:1\"\r\n                    cdkDropList\r\n                    [cdkDropListData]=\"unsortedCharacters\"\r\n                    class=\"example-list\"\r\n                    (cdkDropListDropped)=\"drop($event)\">\r\n                        <mat-grid-tile *ngFor=\"let character of unsortedCharacters\"  cdkDrag>\r\n                            <div class=\"tier-item\">\r\n                                <img src=\"https://static.f-list.net/images/avatar/{{character.toLowerCase()}}.png\"\r\n                                class=\"tier-card-image\" \r\n                                matTooltip=\"{{character}}\"\r\n                                matTooltipPosition=\"above\" />\r\n                                <a mat-icon-button href=\"https://www.f-list.net/c/{{character}}\" target=\"_blank\">\r\n                                    <mat-icon>open_in_new</mat-icon>\r\n                                </a>\r\n                            </div>\r\n                        </mat-grid-tile>\r\n                    </mat-grid-list>\r\n                    <button mat-flat-button matTooltip=\"Add Character\" (click)=\"clickAddCharacter()\" color=\"accent\">\r\n                        <mat-icon>add</mat-icon>\r\n                    </button>\r\n                </mat-expansion-panel>\r\n            </div>\r\n      </div>\r\n      \r\n    <!--\r\n    <mat-grid-list cols=\"10\" rowHeight=\"1:1\" cdkDropList>\r\n\r\n        <mat-grid-tile class=\"characterCard\" \r\n        *ngFor=\"let character of unsortedCharacters\" \r\n        cdkDrag >\r\n            <mat-card >\r\n\r\n            <div class=\"characterCardPfp\" [style.background]=\"'url(https://static.f-list.net/images/avatar/'+character.toLowerCase().replaceAll(' ','%20')+'.png)'\"\r\n            matTooltip=\"{{character}}\"\r\n            matTooltipPosition=\"above\" >\r\n\r\n            </div>\r\n            <mat-card-actions>\r\n                <a mat-icon-button href=\"https://www.f-list.net/c/{{character}}\" target=\"_blank\">\r\n                    <mat-icon>open_in_new</mat-icon>\r\n                </a>\r\n            </mat-card-actions>\r\n            </mat-card>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n-->\r\n<!--For the html2canvas methods-->\r\n<div id=\"download\">\r\n    <img #canvas>\r\n    <a #downloadLink></a>\r\n  </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css']\n})\nexport class ListItemComponent implements OnInit {\n\n  @Input() character: string;\n  @Input() hideLink: boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n      <span>/flg/ Tiermaker</span>\n      <span class=\"toolbar-spacer\"></span>\n      <a mat-icon-button\n      matTooltip=\"Send note on F-list\"\n      href=\"https://www.f-list.net/read_notes.php?send=fatcat%20client\"\n      target=\"_blank\">\n        <mat-icon>mail</mat-icon>\n      </a>\n      <a mat-icon-button\n      matTooltip=\"Github\"\n      href=\"https://github.com/FatCatClient/flg-tierlist-maker/\"\n      target=\"_blank\">\n        <mat-icon>open_in_new</mat-icon>\n    </a>\n</mat-toolbar>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}