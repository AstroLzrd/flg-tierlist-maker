{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/classes/tier-character.ts","webpack:///src/app/classes/tier.ts","webpack:///src/app/list-container/dialog/dialog-add-character/character-dialog-content.ts","webpack:///src/app/list-container/dialog/dialog-add-character/dialog-add-character.component.ts","webpack:///src/app/list-container/dialog/dialog-add-character/dialog-add-character.component.html","webpack:///src/app/list-container/dialog/dialog-color/dialog-color.component.ts","webpack:///src/app/list-container/dialog/dialog-color/dialog-color.component.html","webpack:///src/app/list-container/dialog/dialog-tiername/dialog-tiername.component.ts","webpack:///src/app/list-container/dialog/dialog-tiername/dialog-tiername.component.html","webpack:///src/app/list-container/dialog/dialog-tiername/tier-dialog-content.ts","webpack:///src/app/list-container/list-container.component.ts","webpack:///src/app/list-container/list-container.component.html","webpack:///src/app/list-container/list-item/list-item.component.ts","webpack:///src/app/toolbar/toolbar.component.ts","webpack:///src/app/toolbar/toolbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","TierCharacter","name","profilePicURL","Tier","colorHex","characters","CharacterDialogContent","DialogAddCharacterComponent","dialogRef","characterData","close","event","target","files","reader","FileReader","readAsDataURL","onload","result","toString","pfpInputChange","onNoClick","DialogColorComponent","DialogTiernameComponent","data","TierDialogContent","color","ListContainerComponent","dialog","gridBreakpoint","setGridBreakPoint","window","innerWidth","initializeData","tiers","unsortedCharacters","characterName","push","windowSize","previousContainer","container","previousIndex","currentIndex","sort","screen","nativeElement","logging","useCORS","allowTaint","canvas","src","toDataURL","downloadLink","href","download","Date","now","click","open","width","afterClosed","subscribe","undefined","length","console","debug","tier","moveTier","splice","indexOf","character","upwards","index","error","newIndex","oldTier","clickAddTier","clickResetButton","downloadImage","onResize","drop","clickAddCharacter","ListItemComponent","hideLink","ToolbarComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'flg-tiermaker';\n}\n","<div>\n  <app-toolbar></app-toolbar>\n  <div id=\"page-content\">\n    <app-list-container></app-list-container>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//Angular Material Components\nimport { DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { ListContainerComponent } from './list-container/list-container.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { ListItemComponent } from './list-container/list-item/list-item.component';\nimport { DialogColorComponent } from './list-container/dialog/dialog-color/dialog-color.component';\nimport { DialogTiernameComponent } from './list-container/dialog/dialog-tiername/dialog-tiername.component';\nimport { DialogAddCharacterComponent } from './list-container/dialog/dialog-add-character/dialog-add-character.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListContainerComponent,\n    ToolbarComponent,\n    ListItemComponent,\n    DialogColorComponent,\n    DialogTiernameComponent,\n    DialogAddCharacterComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DragDropModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class TierCharacter {\n    name: String;\n    profilePicURL: String;\n\n    constructor(name: string, profilePicURL: string) { \n        this.name = name;\n        this.profilePicURL = profilePicURL;\n    }\n}\n","import { TierCharacter } from \"./tier-character\";\n\nexport class Tier {\n    characters: TierCharacter[] = [];\n    name = \"Unnamed Tier\"\n    colorHex = \"#8F8\"\n\n    constructor(name: string, colorHex: string) { \n        this.name = name;\n        this.colorHex = colorHex;\n    }\n}\n","export class CharacterDialogContent {\n    name:String;\n    profilePicURL:String;\n    \n    constructor(){\n        //this.name =\"\";\n        this.profilePicURL = \"\";\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { CharacterDialogContent } from './character-dialog-content';\n\n@Component({\n  selector: 'app-dialog-add-character',\n  templateUrl: './dialog-add-character.component.html',\n  styleUrls: ['./dialog-add-character.component.css']\n})\nexport class DialogAddCharacterComponent implements OnInit {\n\n  characterData: CharacterDialogContent;\n\n  constructor(public dialogRef: MatDialogRef<DialogAddCharacterComponent>) { }\n\n  ngOnInit(): void {\n    this.characterData = new CharacterDialogContent();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  pfpInputChange(event) { // called each time file input changes\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n      reader.onload = (event) => { // called once readAsDataURL is completed\n        this.characterData.profilePicURL = event.target.result.toString();\n      }\n    }\n}\n\n}\n","<h1 mat-dialog-title>Add a character</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\">\n        <mat-label>Name</mat-label>\n        <input matInput [(ngModel)]=\"characterData.name\" cdkFocusInitial>\n  </mat-form-field>\n        <input #pfpInput hidden=\"true\" type=\"file\" onclick=\"this.value=null\" (change)=\"pfpInputChange($event)\" accept=\".png\"/>\n        <button mat-flat-button (click)=\"pfpInput.click()\">Select Profile Picture</button>\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-flat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-flat-button [mat-dialog-close]=\"characterData\" [disabled]=\"characterData.name == undefined || characterData.name.length < 2 || characterData.profilePicURL == undefined || characterData.profilePicURL.length < 1\" color=\"primary\" >Ok</button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-color',\n  templateUrl: './dialog-color.component.html',\n  styleUrls: ['./dialog-color.component.css']\n})\nexport class DialogColorComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DialogColorComponent>, @Inject(MAT_DIALOG_DATA) public colorHex: string) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(this.colorHex);\n  }\n}\n","<h1 mat-dialog-title>Select a color</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\">\n    <mat-radio-group aria-label=\"Select an option\">\n        <mat-radio-button value=\"1\">Option 1</mat-radio-button>\n        <mat-radio-button value=\"2\">Option 2</mat-radio-button>\n      </mat-radio-group>      \n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"colorHex\" cdkFocusInitial>Ok</button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TierDialogContent } from './tier-dialog-content';\n\n@Component({\n  selector: 'app-dialog-tiername',\n  templateUrl: './dialog-tiername.component.html',\n  styleUrls: ['./dialog-tiername.component.css']\n})\nexport class DialogTiernameComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DialogTiernameComponent>, @Inject(MAT_DIALOG_DATA) public data: TierDialogContent) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Tier Settings</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Name</mat-label>\n    <input matInput [(ngModel)]=\"data.name\" cdkFocusInitial>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Colour</mat-label>\n    <input matInput type=\"color\" [(ngModel)]=\"data.color\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"data\"  color=\"primary\" >Ok</button>\n</div>\n","export class TierDialogContent {\n    color: String;\n    name: String;\n\n    constructor(){\n        this.color =\"\";\n        this.name = \"\";\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Tier } from '../classes/tier';\r\nimport defaultCharacters from '../../assets/characters.json';\r\nimport {DialogColorComponent} from './dialog/dialog-color/dialog-color.component'\r\nimport {DialogTiernameComponent} from './dialog/dialog-tiername/dialog-tiername.component'\r\nimport html2canvas from 'html2canvas';\r\nimport { TierCharacter } from '../classes/tier-character';\r\nimport { DialogAddCharacterComponent } from './dialog/dialog-add-character/dialog-add-character.component';\r\n\r\n@Component({\r\n  selector: 'app-list-container',\r\n  templateUrl: './list-container.component.html',\r\n  styleUrls: ['./list-container.component.css']\r\n})\r\nexport class ListContainerComponent implements OnInit {\r\n\r\n  @ViewChild('tierlist') screen: ElementRef;\r\n  @ViewChild('canvas') canvas: ElementRef;\r\n  @ViewChild('downloadLink') downloadLink: ElementRef;\r\n  gridBreakpoint = 1\r\n  tiers: Tier[];\r\n  unsortedCharacters: TierCharacter[];\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.setGridBreakPoint(window.innerWidth);\r\n    this.initializeData();\r\n  }\r\n\r\n  onResize(event) {\r\n    this.setGridBreakPoint(event.target.innerWidth);\r\n  }\r\n\r\n  initializeData(){\r\n    this.tiers = [\r\n      new Tier(\"S tier\", \"#7fffff\"),\r\n      new Tier(\"A tier\", \"#7fff7f\"),\r\n      new Tier(\"B tier\", \"#bfff7f\"),\r\n      new Tier(\"C tier\", \"#ffff7f\"),\r\n      new Tier(\"D tier\", \"#ffbf7f\"),\r\n      new Tier(\"F tier\", \"#ff7f7f\")\r\n    ]\r\n    this.unsortedCharacters = [];\r\n    for(let characterName of defaultCharacters){\r\n      this.unsortedCharacters.push(new TierCharacter(characterName,\"assets/avatars/\"+characterName+\".png\"))\r\n    }\r\n  }\r\n\r\n  setGridBreakPoint(windowSize){\r\n    //This is ugly as fuck, but apparently gives us the fastest performance in every browser except Internet Explorer, but they can go fuck themselves. You're on 4chan, you don't use that\r\n    //TODO give the unsorted bin a different breakpoint\r\n    if(windowSize <= 1000) this.gridBreakpoint = 3; else\r\n    if(windowSize <= 1500) this.gridBreakpoint = 9;\r\n    else this.gridBreakpoint = 6;\r\n\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n      event.container.data.sort();\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n                        event.container.data,\r\n                        event.previousIndex,\r\n                        event.currentIndex);\r\n      event.container.data.sort();\r\n    }\r\n  }\r\n\r\n  clickResetButton(){\r\n    this.initializeData();\r\n  }\r\n\r\n  downloadImage(){\r\n    html2canvas(this.screen.nativeElement,{logging: true, useCORS: true, allowTaint: false}).then(canvas => {\r\n      this.canvas.nativeElement.src = canvas.toDataURL();\r\n      this.downloadLink.nativeElement.href = canvas.toDataURL('image/png');\r\n      this.downloadLink.nativeElement.download = 'flg-tierlist-'+Date.now()+\".png\";\r\n      this.downloadLink.nativeElement.click();\r\n    });\r\n  }\r\n\r\n  clickAddTier(){\r\n    const dialogRef = this.dialog.open(DialogTiernameComponent, {\r\n      width: '250px',\r\n      data: {name: \"X Tier\",\r\n            color: \"#ffff7f\"}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != undefined){\r\n        this.tiers[this.tiers.length] = new Tier(result.name, result.color)\r\n      }\r\n    });   \r\n  }\r\n\r\n  clickAddCharacter(){\r\n    const dialogRef = this.dialog.open(DialogAddCharacterComponent, {\r\n      width: '650px',\r\n      //data: {name: \"X Tier\",\r\n      //      color: \"#ffff7f\"}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != undefined){\r\n        console.debug(result)\r\n        this.unsortedCharacters[this.unsortedCharacters.length] = new TierCharacter(result.name,result.profilePicURL);\r\n        //this.tiers[this.tiers.length] = new Tier(result.name, result.color)\r\n      }\r\n      else{\r\n        console.debug(\"Dialog yielded no result.\")\r\n      }\r\n    });   \r\n    /*\r\n    var characterName = prompt(\"Character name?\", '')\r\n    if (characterName != null || characterName.length > 2){\r\n      this.addCharacter(characterName);\r\n    }\r\n    else{\r\n      alert(\"Invalid character name.\");\r\n    }\r\n    */\r\n  }\r\n\r\n  clickMoveTierUpButton(tier: Tier){\r\n    this.moveTier(tier,true);\r\n  }\r\n\r\n  clickMoveTierDownButton(tier: Tier){\r\n    this.moveTier(tier,false);\r\n  }\r\n\r\n\r\n  clickChangeTierButton(tier: Tier){\r\n    const dialogRef = this.dialog.open(DialogTiernameComponent, {\r\n      width: '250px',\r\n      data: {name: tier.name,\r\n            color: tier.colorHex}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != undefined){\r\n        tier.name = result.name;\r\n        tier.colorHex = result.color;\r\n      }\r\n    });   \r\n  }\r\n\r\n  clickDeleteTierButton(tier: Tier){\r\n    this.tiers.splice(this.tiers.indexOf(tier),1);\r\n    for(let character of tier.characters){\r\n      this.unsortedCharacters.push(character);\r\n    }\r\n    this.unsortedCharacters.sort();\r\n  }\r\n\r\n  moveTier(tier: Tier, upwards: boolean){\r\n    //by \"upwards\" we mean the position, not the number\r\n    let index: number = this.tiers.indexOf(tier);\r\n    //this *should* not happen, but since indexOf does have a return for bad data, we'll catch it anyway\r\n    if(index < 0) {\r\n      console.error(\"Tier: \"+tier+\" isn't actually in the list!\");\r\n      return;\r\n    }\r\n    //check to see if we're not trying to move to an invalid position\r\n    if((upwards&&index < 1)||(!upwards&&index == this.tiers.length-1)) return;\r\n    //but we're all clear now, let's move our thing\r\n    let newIndex = upwards ? index - 1 : index + 1\r\n    let oldTier = this.tiers[newIndex];\r\n    this.tiers[newIndex] = tier;\r\n    this.tiers[index] = oldTier;\r\n  }\r\n\r\n}\r\n","<div>\r\n\r\n    <button mat-flat-button \r\n    matTooltip=\"Add Tier\" \r\n    color=\"accent\"\r\n    (click)=\"clickAddTier()\">\r\n        <mat-icon>add</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Reset Everything\" \r\n    (click)=\"clickResetButton()\"\r\n    color=\"warn\">\r\n        <mat-icon> layers_clear</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Save\" \r\n    disabled>\r\n        <mat-icon> save</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Load\" \r\n    disabled>\r\n        <mat-icon> folder_open</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Export to image\" \r\n    (click)=\"downloadImage()\">\r\n        <mat-icon>image</mat-icon>\r\n    </button>\r\n    <button mat-flat-button \r\n    matTooltip=\"Caleb Button\" \r\n    disabled>\r\n        <mat-icon>cloud</mat-icon>\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <div cdkDropListGroup>\r\n        <div #tierlist class=\"list-container-column\">\r\n        <div class=\"tier-container\" *ngFor=\"let tier of tiers\">\r\n            <div class=\"tier-column tier-column-name\" [style.background-color]=\"tier.colorHex\">\r\n                <h2 title>{{tier.name}}</h2>                \r\n            </div>\r\n            <div class=\"tier-column tier-column-tier\">\r\n                <mat-grid-list\r\n                    [cols]=\"gridBreakpoint\"\r\n                    cdkDropList\r\n                    rowHeight=\"2:1\"\r\n                    [cdkDropListData]=\"tier.characters\"\r\n                    class=\"tier-list\"\r\n                    (cdkDropListDropped)=\"drop($event)\">\r\n                        <mat-grid-tile *ngFor=\"let character of tier.characters\"  cdkDrag>\r\n                            <div class=\"tier-item\">\r\n                                <!--<img src=\"https://static.f-list.net/images/avatar/{{character.toLowerCase()}}.png\"-->\r\n                                <img src=\"{{character.profilePicURL}}\"\r\n                                class=\"tier-card-image\" \r\n                                matTooltip=\"{{character.name}}\"\r\n                                matTooltipPosition=\"above\" />\r\n                            </div>\r\n                        </mat-grid-tile>\r\n                </mat-grid-list>\r\n                <button mat-button \r\n                matTooltip=\"Edit tier\" \r\n                (click)=\"clickChangeTierButton(tier)\">\r\n                    <mat-icon>build</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Delete\" \r\n                (click)=\"clickDeleteTierButton(tier)\"\r\n                color=\"warn\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Move up\" \r\n                (click)=\"clickMoveTierUpButton(tier)\">\r\n                    <mat-icon>expand_less</mat-icon>\r\n                </button>\r\n                <button mat-button \r\n                matTooltip=\"Move down\" \r\n                (click)=\"clickMoveTierDownButton(tier)\">\r\n                <mat-icon>expand_more</mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        <div class=\"list-container-column\">\r\n            <mat-expansion-panel  id=\"unsorted-character-container\"\r\n            [expanded]=\"true\" >\r\n                    <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        Unsorted Characters\r\n                    </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <mat-grid-list\r\n                    [cols]=\"gridBreakpoint\"\r\n                    (window:resize)=\"onResize($event)\"\r\n                    rowHeight=\"2:1\"\r\n                    cdkDropList\r\n                    [cdkDropListData]=\"unsortedCharacters\"\r\n                    class=\"example-list\"\r\n                    (cdkDropListDropped)=\"drop($event)\">\r\n                        <mat-grid-tile *ngFor=\"let character of unsortedCharacters\"  cdkDrag>\r\n                            <div class=\"tier-item\">\r\n                                <img src=\"{{character.profilePicURL}}\"\r\n                                class=\"tier-card-image\" \r\n                                matTooltip=\"{{character.name}}\"\r\n                                matTooltipPosition=\"above\" />\r\n                                <a mat-icon-button href=\"https://www.f-list.net/c/{{character.name}}\" target=\"_blank\">\r\n                                    <mat-icon>open_in_new</mat-icon>\r\n                                </a>\r\n                            </div>\r\n                        </mat-grid-tile>\r\n                    </mat-grid-list>\r\n                    <button mat-flat-button matTooltip=\"Add Character\" (click)=\"clickAddCharacter()\" color=\"accent\">\r\n                        <mat-icon>add</mat-icon>\r\n                    </button>\r\n                </mat-expansion-panel>\r\n            </div>\r\n      </div>\r\n<!--For the html2canvas methods-->\r\n<div id=\"download\">\r\n    <img #canvas>\r\n    <a #downloadLink></a>\r\n  </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css']\n})\nexport class ListItemComponent implements OnInit {\n\n  @Input() character: string;\n  @Input() hideLink: boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n      <span>/flg/ Tiermaker</span>\n      <span class=\"toolbar-spacer\"></span>\n      <a mat-icon-button\n      matTooltip=\"Send note on F-list\"\n      href=\"https://www.f-list.net/read_notes.php?send=fatcat%20client\"\n      target=\"_blank\">\n        <mat-icon>mail</mat-icon>\n      </a>\n      <a mat-icon-button\n      matTooltip=\"Github\"\n      href=\"https://github.com/FatCatClient/flg-tierlist-maker/\"\n      target=\"_blank\">\n        <mat-icon>open_in_new</mat-icon>\n    </a>\n</mat-toolbar>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}